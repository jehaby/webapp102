schema {
    query: Query
    mutation: Mutation
}

type Query {
    categories(): [Category!]!

    brands(): [Brand!]!

    ad(uuid: ID!): Ad!
    ads(args: AdsArgs): AdConnection!

    properties(categoryId: ID!): [Property!]
}

type Mutation {
    adCreate(input: AdCreateInput!): Ad!
    adUpdate(uuid: ID!, input: AdUpdateInput!): Ad!
    # editAd()
    # removeAd()
}

input AdCreateInput {
    name: String!,
    description: String!,
    categoryId: ID!,
    condition: Condition!,
    localityId: ID!,
    price: Int!,
    currency: Currency!,
    weight: Int,
    brandId: ID,
    properties: String,
}

input AdUpdateInput {
    name: String,
    description: String,
    categoryId: ID,
    localityId: ID,
    condition: Condition,
    price: Int,
    currency: Currency,
    weight: Int,
    brandId: ID,
    properties: String,
}

input AdsArgs {
    first: Int
    after: String

    categoryId: ID
    order: OrderArg
    price: PriceArg
    weight: Range
    localityId: ID
    properties: String
}

input PriceArg {
    currency: Currency!
    min: Int
    max: Int
}

input OrderArg {
    orderBy: OrderBy!
    direction: Direction!
}

enum OrderBy {
    DATE
    PRICE
    WEIGHT
    # LOCALITY (nearest)
}

enum Direction {
    ASC
    DESC
}

input Range {
    min: Int
    max: Int
}
